#!/bin/bash

set -x

export FABRIC_CFG_PATH="${PWD}/../config"

MSP=`grep "^CORE_PEER_LOCALMSPID=" ../.env.peer | awk -F= '{print $2}'`
ORG="${MSP:0:$((${#MSP} - 3))}"
HOST=`grep "^CORE_PEER_ID=" ../.env.peer | awk -F. '{print $2"."$3"."$4"."$5}'`
configtxgen -printOrg ${ORG} > ${ORG}.json
configtxlator proto_decode --input config_block.pb --type common.Block --output config_block.json
jq ".data.data[0].payload.data.config" config_block.json > config.json
jq -s ".[0] * {\"channel_group\":{\"groups\":{\"Application\":{\"groups\": {\"${ORG}\":.[1]}}}}}" config.json "${ORG}.json" > tmp1.json
jq "del(.channel_group.groups.Application.groups.${ORG}.values.Endpoints)" tmp1.json > tmp2.json 
jq -s ".[0] * {\"channel_group\":{\"groups\":{\"Orderer\":{\"groups\": {\"${ORG}\":.[1]}}}}}" tmp2.json "${ORG}.json" > tmp3.json
crt=`base64 ../orderers/orderer0/tls/server.crt | tr -d '\n'`
jq ".channel_group.groups.Orderer.values.ConsensusType.value.metadata.consenters += [{\"client_tls_cert\": \"${crt}\", \"host\": \"orderer0.${HOST}\", \"port\": 7050, \"server_tls_cert\": \"${crt}\"}]" tmp3.json > modified_config.json
configtxlator proto_encode --input config.json --type common.Config --output config.pb
configtxlator proto_encode --input modified_config.json --type common.Config --output modified_config.pb
configtxlator compute_update --channel_id ${CHANNEL} --original config.pb --updated modified_config.pb --output update.pb
configtxlator proto_decode --input update.pb --type common.ConfigUpdate --output update.json
echo '{"payload":{"header":{"channel_header":{"channel_id":"'${CHANNEL}'", "type":2}},"data":{"config_update":'$(cat update.json)'}}}' | jq . > update_in_envelope.json
configtxlator proto_encode --input update_in_envelope.json --type common.Envelope --output update_in_envelope.pb

rm config_block.json config.json "${ORG}.json" tmp1.json tmp2.json tmp3.json modified_config.json config.pb modified_config.pb update.pb update.json update_in_envelope.json

set +x
echo "Done."
